import{G as c,T as g,b as P,B as w,M as y,c as b,d as p,V as h,e as f,f as m,Q as x}from"./three-vendor-BkoL2XzL.js";class M extends c{constructor(t={}){super(),this.options=t,this.landImageData=null,new g().load("/journey/world-map.png",o=>{const i=o.image;o.flipY=!1,o.flipX=!1;const a=document.createElement("canvas");a.width=i.width,a.height=i.height;const r=a.getContext("2d");r.drawImage(i,0,0),this.landImageData=r.getImageData(0,0,a.width,a.height),console.log("Land texture loaded (flipY = true).")},void 0,o=>{console.error("Error loading land texture:",o)}),this.model,new P().load("/journey/models/boat.glb",o=>{this.model=o.scene,this.model.scale.set(1e-4,1e-4,1e-4),this.add(this.model)}),this.cross=new c,this.add(this.cross),this.geometry=new w(.02,.02,.1),this.material=new y({color:new b(0,0,0)}),this.crossPart1=new p(this.geometry,this.material),this.crossPart1.position.y=.05,this.crossPart2=new p(this.geometry,this.material),this.crossPart2.rotation.y=Math.PI/2,this.crossPart2.position.y=.05,this.cross.add(this.crossPart1),this.cross.add(this.crossPart2),this.boatPos=new h(0,t.radius+t.boatScaleOffset,0),this.boatForward=new h(1,0,0),this.boatUp=this.boatPos.clone().normalize(),this.position.copy(this.boatPos),this.lastBoatPos=this.boatPos.clone(),this.moveSpeed=.01,this.turnSpeed=.1,this.keysPressed={}}updateBoatPos(){this.position.copy(this.boatPos),this.up.copy(this.boatUp);const t=this.boatPos.clone().add(this.boatForward);this.lookAt(t)}moveAlongSphere(t){const s=new h().crossVectors(this.boatForward,this.boatUp).normalize(),e=t*this.moveSpeed;this.boatPos.applyAxisAngle(s,e).normalize().multiplyScalar(this.options.radius+this.options.boatScaleOffset),this.boatUp.copy(this.boatPos).normalize(),this.boatForward=this.projectOnTangentPlane(this.boatForward,this.boatUp)}turnBoat(t){this.boatForward.applyAxisAngle(this.boatUp,t*this.turnSpeed),this.boatForward.normalize()}projectOnTangentPlane(t,s){return t.clone().sub(s.clone().multiplyScalar(t.dot(s))).normalize()}sphericalDirToUV(t){let s=.5-Math.atan2(t.z,t.x)/(2*Math.PI),e=.5-Math.asin(t.y)/Math.PI;return new f(s,e)}getLuminanceAtUV(t){const s=this.landImageData;if(!s)return 0;const e=m.clamp(t.x,0,1),o=m.clamp(t.y,0,1),i=Math.floor(e*(s.width-1)),r=(Math.floor(o*(s.height-1))*s.width+i)*4;return 1-s.data[r]/255}update(t,s,e){let o=!1;const i=this.boatPos.clone().normalize(),a=this.sphericalDirToUV(i),n=this.getLuminanceAtUV(a)*.15>.01;if(this.model!=null&&(this.model.visible=!n),this.cross.visible=!!n,(this.keysPressed.w||this.keysPressed.arrowup)&&(this.moveAlongSphere(1),o=!0),(this.keysPressed.s||this.keysPressed.arrowdown)&&(this.moveAlongSphere(-1),o=!0),(this.keysPressed.a||this.keysPressed.arrowleft)&&this.turnBoat(1),(this.keysPressed.d||this.keysPressed.arrowright)&&this.turnBoat(-1),this.keysPressed[" "]&&n){console.log("space pressed ");const l=new h,d=new x;this.getWorldPosition(l),this.getWorldQuaternion(d),e.showFlag(l,d)}o&&this.position.distanceTo(this.lastBoatPos)>.1&&(this.lastBoatPos.copy(this.position),n||s.addRipple(this.position.clone(),t)),this.updateBoatPos()}}export{M as Boat};
//# sourceMappingURL=Boat-CviiIrcR.js.map
