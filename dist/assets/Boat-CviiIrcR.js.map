{"version":3,"file":"Boat-CviiIrcR.js","sources":["../../src/objects/Boat.js"],"sourcesContent":["import * as THREE from 'three';\nimport { GLTFLoader } from 'three/addons/loaders/GLTFLoader.js';\n\nexport class Boat extends THREE.Group {\n  constructor(options = {}) {\n    super();\n    this.options = options;\n\n    this.landImageData = null;\n\n    // âœ… Load texture with default flipY=true (same as Map)\n    const loader = new THREE.TextureLoader();\n    loader.load(\n      import.meta.env.BASE_URL +'world-map.png',\n      (texture) => {\n        const image = texture.image;\n        texture.flipY = false;\n        texture.flipX = false;\n\n\n        const canvas = document.createElement('canvas');\n        canvas.width = image.width;\n        canvas.height = image.height;\n\n        const ctx = canvas.getContext('2d');\n        ctx.drawImage(image, 0, 0);\n\n        this.landImageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n        console.log(\"Land texture loaded (flipY = true).\");\n      },\n      undefined,\n      (err) => {\n        console.error(\"Error loading land texture:\", err);\n      }\n    );\n\n    // Load boat model\n    this.model;\n    const gltfLoader = new GLTFLoader();\n    gltfLoader.load(import.meta.env.BASE_URL + 'models/boat.glb', (gltf) => {\n      this.model = gltf.scene;\n      this.model.scale.set(0.0001, 0.0001, 0.0001);\n      this.add(this.model);\n    });\n\n    // Debug cube\n    this.cross = new THREE.Group()\n    this.add(this.cross);\n\n\n    this.geometry = new THREE.BoxGeometry(0.02, 0.02, 0.1);\n    this.material = new THREE.MeshBasicMaterial({ color: new THREE.Color(0,0,0) });\n    this.crossPart1 = new THREE.Mesh(this.geometry, this.material);\n    this.crossPart1.position.y = 0.05;\n    this.crossPart2 = new THREE.Mesh(this.geometry, this.material);\n    this.crossPart2.rotation.y = Math.PI/2;\n    this.crossPart2.position.y = 0.05;\n\n    this.cross.add(this.crossPart1);\n    this.cross.add(this.crossPart2);\n\n    // Initial position\n    this.boatPos = new THREE.Vector3(0, options.radius + options.boatScaleOffset, 0);\n    this.boatForward = new THREE.Vector3(1, 0, 0);\n    this.boatUp = this.boatPos.clone().normalize();\n\n    this.position.copy(this.boatPos);\n    this.lastBoatPos = this.boatPos.clone();\n    this.moveSpeed = 0.01;\n    this.turnSpeed = 0.1;\n    this.keysPressed = {};\n\n\n\n\n\n  }\n\n  updateBoatPos() {\n    this.position.copy(this.boatPos);\n    this.up.copy(this.boatUp);\n    const lookTarget = this.boatPos.clone().add(this.boatForward);\n    this.lookAt(lookTarget);\n  }\n\n  moveAlongSphere(direction) {\n    const axis = new THREE.Vector3().crossVectors(this.boatForward, this.boatUp).normalize();\n    const angle = direction * this.moveSpeed;\n    this.boatPos.applyAxisAngle(axis, angle).normalize().multiplyScalar(this.options.radius + this.options.boatScaleOffset);\n    this.boatUp.copy(this.boatPos).normalize();\n    this.boatForward = this.projectOnTangentPlane(this.boatForward, this.boatUp);\n  }\n\n  turnBoat(leftRight) {\n    this.boatForward.applyAxisAngle(this.boatUp, leftRight * this.turnSpeed);\n    this.boatForward.normalize();\n  }\n\n  projectOnTangentPlane(vec, normal) {\n    return vec.clone().sub(normal.clone().multiplyScalar(vec.dot(normal))).normalize();\n  }\n\n  /**\n   * Convert spherical direction to UV coordinates.\n   * Adjusted to match THREE.TextureLoader's default (flipY = true).\n   */\n  sphericalDirToUV(dir) {\n    let u =  0.5 - Math.atan2(dir.z, dir.x) / (2 * Math.PI)\n    let v = 0.5 - Math.asin(dir.y) / Math.PI;\n    return new THREE.Vector2(u, v);\n  }\n\n  getLuminanceAtUV(uv) {\n    const imageData = this.landImageData;\n    if (!imageData) return 0;\n\n    const u = THREE.MathUtils.clamp(uv.x, 0, 1);\n    const v = THREE.MathUtils.clamp(uv.y, 0, 1);\n\n    const x = Math.floor(u * (imageData.width - 1));\n    const y = Math.floor(v * (imageData.height - 1));\n    const index = (y * imageData.width + x) * 4;\n    const r = imageData.data[index];\n\n    return 1.0 - r / 255;\n  }\n\n  update(time, water, treasure) {\n    let moved = false;\n\n    const dir = this.boatPos.clone().normalize();\n    const uv = this.sphericalDirToUV(dir);\n    const luminance = this.getLuminanceAtUV(uv);\n\n    const groundAmplitude = 0.15;\n    const land = luminance * groundAmplitude;\n    const onLand = land > 0.01;\n    //this.moveSpeed = onLand ? this.baseSpeed * 0.01 : this.baseSpeed;\n\n    if(this.model != null){\n      this.model.visible = onLand ? false : true;\n    }\n    this.cross.visible = onLand ? true : false;\n    \n\n    if (this.keysPressed['w'] || this.keysPressed['arrowup']) {\n      this.moveAlongSphere(+1);\n      moved = true;\n    }\n    if (this.keysPressed['s'] || this.keysPressed['arrowdown']) {\n      this.moveAlongSphere(-1);\n      moved = true;\n    }\n    if (this.keysPressed['a'] || this.keysPressed['arrowleft']) {\n      this.turnBoat(+1);\n    }\n    if (this.keysPressed['d'] || this.keysPressed['arrowright']) {\n      this.turnBoat(-1);\n    }\n\n    if (this.keysPressed[' '] && onLand) {\n      console.log('space pressed ')\n\n      const worldPos = new THREE.Vector3();\n      const worldQuat = new THREE.Quaternion();\n      this.getWorldPosition(worldPos);\n      this.getWorldQuaternion(worldQuat);\n      treasure.showFlag(worldPos, worldQuat);\n\n    }\n\n    if (moved && this.position.distanceTo(this.lastBoatPos) > 0.1) {\n      this.lastBoatPos.copy(this.position);\n      if(!onLand){\n        water.addRipple(this.position.clone(), time);\n      }\n    }\n\n\n    this.updateBoatPos();\n  }\n}\n"],"names":["Boat","THREE.Group","options","THREE.TextureLoader","texture","image","canvas","ctx","err","GLTFLoader","gltf","THREE.BoxGeometry","THREE.MeshBasicMaterial","THREE.Color","THREE.Mesh","THREE.Vector3","lookTarget","direction","axis","angle","leftRight","vec","normal","dir","u","v","THREE.Vector2","uv","imageData","THREE.MathUtils","x","index","time","water","treasure","moved","onLand","worldPos","worldQuat","THREE.Quaternion"],"mappings":"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"}